{
  "compilerOptions": {
    "target": "ESNext",
    "lib": ["DOM", "DOM.Iterable", "ESNext"],
    "module": "ESNext",
    "skipLibCheck": true,
    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": false, // **IMPORTANT:** Disables direct import of TypeScript files (.ts or .tsx)

    // Justification for setting to false:
    // - Cypress expects JavaScript for configuration and tests. This setting ensures imports point to JavaScript files.
    // - Avoids conflicts with `noEmit` that caused errors. Simplifies configuration.
    // - Most Cypress scenarios don't rely on direct TypeScript imports. This is the common approach.

    // Exceptions (less common):
    // - Might need this set to true for specific testing tools written in TypeScript that need direct import.
    // - If using a bundler with TypeScript support, the bundler handles imports (this setting becomes less relevant).
    
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx",
    /* Linting */
    "strict": true,
    "noFallthroughCasesInSwitch": true,
    /* Setting predefined path components */
    "baseUrl": "./",
    "paths": {
      "@redux/reducers": [
        "src/reduxToolkit/reducers/index.ts"
      ],
      "@redux/hooks": [
        "src/reduxToolkit/hooks.ts"
      ],
      "@redux/store": [
        "src/reduxToolkit/store.ts"
      ],
      "@slices": [
        "src/slices/index.ts"
      ],
      "@constants": [
        "src/constants/index.ts"
      ],
      "@hooks": [
        "src/hooks/index.ts"
      ],
      "@utils": [
        "src/utils/index.ts"
      ],
      "@higherOrderComponents": [
        "src/components/higherOrderComponents/index.ts"
      ],
      "@services": [
        "src/services/index.ts"
      ],
      "@theme": [
        "src/theme/index.ts"
      ],
      "@components/*": [
        "src/components/*"
      ],
      "@assets/*": [
        "src/assets/*"
      ],
       "@context": [
        "src/context/index.ts"
      ],
      "@node_modules/*": [
        "node_modules/*"
      ]
    }
  },
  "include": ["src"],
  "references": [
    {
      "path": "./tsconfig.node.json"
    }
  ]
}
